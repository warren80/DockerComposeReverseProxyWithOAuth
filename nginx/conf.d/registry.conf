# Docker Registry
upstream registry.wvoelkl.com {
    server registry.wvoelkl.com:5000;
}

server {
        server_name             registry.wvoelkl.com;
        listen                  80;
        error_log               /var/log/nginx/error.log;
        access_log              /var/log/nginx/access.log;

        # return 302 to prevent cacheing
        return 302              https://$host$request_uri;
}

server {
        listen                  443 ssl http2;
        server_name             registry.wvoelkl.com;

        ssl_certificate         /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key     /etc/nginx/ssl/privkey.pem;

        error_log               /var/log/nginx/error.log;
        access_log              /var/log/nginx/access.log;

        auth_request            /validate;
        # if validate returns `401 not authorized` then forward the request to the error401block
        error_page              401 = @error401;


        location = /validate {
                # vouch can run behind the same nginx-revproxy
                # May need to add "internal", and comply to "upstream" server naming
                proxy_pass                              http://login.wvoelkl.com;
                proxy_set_header                        Host $http_host;

                # vouch only acts on the request headers
                proxy_pass_request_body                 off;
                proxy_set_header                        Content-Length "";

                # pass X-Vouch-User along with the request
                auth_request_set        $auth_resp_x_vouch_user $upstream_http_x_vouch_user;

                # these return values are used by the @error401 call
                auth_request_set        $auth_resp_jwt  $upstream_http_x_vouch_jwt;
                auth_request_set        $auth_resp_err  $upstream_http_x_vouch_err;
                auth_request_set $auth_resp_failcount   $upstream_http_x_vouch_failcount;
        }

        location / {
                proxy_pass		http://registry.wvoelkl.com;
                proxy_read_timeout      900;

                proxy_set_header	X-Vouch-User		$auth_resp_x_vouch_user;
	        proxy_set_header  	Host			$http_host;
        	proxy_set_header  	X-Real-IP  		$remote_addr;
	        proxy_set_header  	X-Forwarded-For		$proxy_add_x_forwarded_for;
        	proxy_set_header  	X-Forwarded-Proto	$scheme;
        }
}
